// <auto-generated />
using System;
using KokoType.Lesson.DAL.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace KokoType.Lesson.DAL.Migrations
{
    [DbContext(typeof(LessonContext))]
    [Migration("20241222224841_UpdateLessonPage")]
    partial class UpdateLessonPage
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("KokoType.Lesson.DAL.Models.LessonModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Language")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("status")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Lessons");
                });

            modelBuilder.Entity("KokoType.Lesson.DAL.Models.LessonPage", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<int>("ErrorCount")
                        .HasColumnType("int");

                    b.Property<Guid?>("LessonModelId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("currentErrors")
                        .HasColumnType("int");

                    b.Property<Guid>("lesson")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("LessonModelId");

                    b.ToTable("LessonPages");
                });

            modelBuilder.Entity("KokoType.Lesson.DAL.Models.LessonResult", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("LessonId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("LessonId");

                    b.ToTable("LessonResults");
                });

            modelBuilder.Entity("KokoType.Lesson.DAL.Models.LessonPage", b =>
                {
                    b.HasOne("KokoType.Lesson.DAL.Models.LessonModel", null)
                        .WithMany("Pages")
                        .HasForeignKey("LessonModelId");
                });

            modelBuilder.Entity("KokoType.Lesson.DAL.Models.LessonResult", b =>
                {
                    b.HasOne("KokoType.Lesson.DAL.Models.LessonModel", "Lesson")
                        .WithMany()
                        .HasForeignKey("LessonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Lesson");
                });

            modelBuilder.Entity("KokoType.Lesson.DAL.Models.LessonModel", b =>
                {
                    b.Navigation("Pages");
                });
#pragma warning restore 612, 618
        }
    }
}
